<?php
/**
 * Tailwind Custom Styles Auto-Import Generator
 * 
 * This script scans /tailwind/custom-styles/ folder for .scss files
 * and generates an auto-import file for use in tailwind-combo.scss
 * 
 * Usage: php dev-tools/generate-tailwind-imports.php
 */

$project_root = dirname(dirname(dirname(__FILE__)));

// Define paths
$customStylesDir = $project_root . '/tailwind/custom-styles/';
$outputFile = $project_root . '/tailwind/custom-styles-autogenerated.scss';
$tailwindDir = $project_root . '/tailwind/';

echo "🎨 Generating Tailwind custom styles imports...\n";

// Create custom-styles directory if it doesn't exist
if (!is_dir($customStylesDir)) {
    mkdir($customStylesDir, 0755, true);
    echo "📁 Created custom-styles directory\n";
}

// Scan for .scss files in custom-styles directory
$scssFiles = [];
if (is_dir($customStylesDir)) {
    $files = scandir($customStylesDir);
    foreach ($files as $file) {
        if (pathinfo($file, PATHINFO_EXTENSION) === 'scss' && $file !== '.' && $file !== '..') {
            $scssFiles[] = $file;
        }
    }
}

// Sort files alphabetically for consistent output
sort($scssFiles);

// Generate import statements
$importContent = "/* AUTO-GENERATED FILE - DO NOT EDIT MANUALLY */\n";
$importContent .= "/* Generated by dev-tools/generate-tailwind-imports.php */\n";
$importContent .= "/* Last updated: " . date('Y-m-d H:i:s') . " */\n\n";

if (empty($scssFiles)) {
    $importContent .= "/* No custom SCSS files found in custom-styles/ directory */\n";
    echo "⚠️  No .scss files found in custom-styles directory\n";
} else {
    $importContent .= "/* Found " . count($scssFiles) . " custom style file(s) */\n\n";
    
    foreach ($scssFiles as $file) {
        $importContent .= "@import \"custom-styles/{$file}\";\n";
        echo "✅ Added import for: {$file}\n";
    }
}

// Write the auto-generated file
file_put_contents($outputFile, $importContent);
echo "📝 Generated: custom-styles-autogenerated.scss\n";

// Pause to ensure file system acknowledges the new file
echo "⏳ Waiting 500ms for file system sync...\n";
usleep(500000); // 500ms pause

// Trigger the actual build process
echo "🚀 Starting Tailwind CSS build process...\n";
$buildCommand = "cd " . $project_root . " && npm run build";
$output = [];
$returnCode = 0;

exec($buildCommand, $output, $returnCode);

if ($returnCode === 0) {
    echo "✅ Tailwind CSS build completed successfully!\n";
    foreach ($output as $line) {
        echo "   $line\n";
    }
} else {
    echo "❌ Build process failed with return code: $returnCode\n";
    foreach ($output as $line) {
        echo "   $line\n";
    }
    exit(1);
}

echo "\n🎉 AI Agent Rebuild Complete!\n";
echo "   - Custom styles: " . count($scssFiles) . " files processed\n";
echo "   - Build status: SUCCESS\n";
echo "   - Ready for use in application\n";
?>